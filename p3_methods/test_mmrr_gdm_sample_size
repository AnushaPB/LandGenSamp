library(here)
library(doParallel)
library(tidyverse)
source(here("p3_methods", "general_run_functions.R"))
source(here("p3_methods", "IBDIBE_functions.R"))
source(here("general_functions.R"))

cl <- makeCluster(6) 
registerDoParallel(cl)

nsamps <- c(100, 200, 500, 1000, 2000, 3000)

# pick example params
index <- which(params$K == 1 & params$m == 0.25 & params$phi == 0.5 & params$H == 0.5 & params$r == 0.3 & params$seed == 1 & params$it == 0)
gsd_df <- get_data(index, params, type = "gsd")
gen <- get_data(index, params, type = "dos")

results <- foreach(i = nsamps, .combine=list) %dopar% {
    library("here")
    library("tidyverse")
    library("dplyr")
    library("gdm")

    # take random sample
    set.seed(1)
    samples <- as.character(gsd_df[sample(1:nrow(gsd_df), i), "idx"])

    # subset data
    subgsd <- gsd_df[samples, ]
    subgen <- gen[samples, ]

    # get gendist
    gendist <- calc_dist(subgen)

    # run mmrr
    mmrr_result <- run_mmrr(gendist, subgsd)
    mmrr_result$nsamp <- i

    # run gdm
    gdm_result <- run_gdm(gendist, subgsd, varImp = FALSE)
    gdm_result$nsamp <- i
    
    gc()
    
    # return coefficients and p-values
    return(list(mmrr = mmrr_result, gdm = gdm_result))
  }
  
results_transposed <- list_transpose(results)
results_df <- map(results_transposed, bind_rows)

stopCluster(cl)
